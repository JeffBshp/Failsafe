# This is an example program that can run inside the game.
# Its syntax is similar to C, but it is interpreted, not compiled (for now anyway).
# The idea is that the player can write programs that interact with the game world.
# For example, creating scripts for robots that move around, harvest materials, manufacture objects, and build structures.
# For now, the only thing this virtual program can do is call a function that prints to the console.



# The file should contain one or more functions at the top level.
void doSomething
	(int n, int time)	# Function parameter list
	(int i)				# Local variables (must be declared here, in the function signature; may change later)
{
	i = 0;
	
	while (i < n)
	{
		i = i + 1;
		print("-->", i);
		sleep(time);
	}
}

# One function needs to be named "main" for the program to run.
int main
	()
	(int localInt)
{
	localInt = 0;			# Assign a value to a local variable
	
	while (localInt < 10)	# There are "while" loops, but not "for" loops
	{
		localInt = localInt + 1;			# Arithmetic operation
		
		sleep(500);							# Call an external function
		print("Hello World!", localInt);
		doSomething(localInt, 100);			# Call a function defined in this file
		
		if (localInt == 5)					# Conditional execution with "if" (no "else" yet)
		{
			print("Halfway Point:", localInt);
		}
	}
	
	return localInt;		# Return a value
}
